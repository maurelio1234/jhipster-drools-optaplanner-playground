import playground.music.*;

import org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScoreHolder;

global HardSoftScoreHolder scoreHolder;

rule "need to play at least a song"
    when
        forall ( Song( inSetList == false ) )
    then
        scoreHolder.addHardConstraintMatch(kcontext, -1000);
end

rule "do not take more than 15min more than the allocated time"
    when
        $playingSlot: PlayingSlot($totalAllocatedSlot : totalAllocatedSlot)
        $requiredTime: Number() from accumulate(
            Song($duration : durationInMinutes, inSetList == true),
            sum($duration))
    then
        if ($requiredTime.intValue() - $totalAllocatedSlot > 15) {
            scoreHolder.addHardConstraintMatch(kcontext, -1000);
        }
end

rule "maximize playing time, playingFunLevel and audienceEnjoyment"
    when
            Song(inSetList == true,
                $duration : durationInMinutes,
                $enjoyment: audienceEnjoyment,
                $fun : playingFunLevel,
                $difficulty : technicalDifficuty)
    then
        scoreHolder.addHardConstraintMatch(kcontext, $duration);
        scoreHolder.addHardConstraintMatch(kcontext, $enjoyment);
        scoreHolder.addSoftConstraintMatch(kcontext, $fun);
        scoreHolder.addSoftConstraintMatch(kcontext, -$difficulty);
end
